services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    volumes: 
      - "./src:/app"
      - "./src/infrastructure/data:/app/infrastructure/data"
    ports:
      - "5000:5000" 
    environment:
     - DATABASE_URL=${DATABASE_URL} 
     - TOKEN=${TOKEN}
     - FLASK_RUN_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - db
    restart: unless-stopped
    command: ["sh", "-c", "python /app/infrastructure/scripts/main.py && gunicorn --reload -b 0.0.0.0:5000 app.app:app"]

  db:
    image: postgres:latest  
    environment:
      - POSTGRES_USER=${POSTGRES_USER} 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} 
      - POSTGRES_DB=${POSTGRES_DB} 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" 
  tests:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./src:/app"
    command: ["sh", "-c", "until curl -s http://api:5000/health; do sleep 1; done; pytest /app/tests"]

    depends_on:
      - api

volumes:
  postgres_data:
